---
- name: create prometheus system group
  group:
    name: "{{ prometheus_group }}"
    system: true
    state: present

- name: create prometheus system user
  user:
    name: "{{ prometheus_user }}"
    system: true
    shell: "/sbin/falselogin"
    group: "{{ prometheus_group }}"
    createhome: false

- name: create prometheus main directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_db_dir }}"
    - "{{ prometheus_root_dir }}"

- name: create prometheus configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: "{{ prometheus_group }}"
    mode: 0750
  with_items:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/conf.d"
    - "{{ prometheus_config_dir }}/rules"
    - "{{ prometheus_config_dir }}/file_sd"

- name: check if installed
  stat:
    path: "{{ prometheus_root_dir }}/releases/{{ prometheus_version }}/prometheus"
  register: prometheus_bin

- name: remove prometheus temporary deploy dir
  file:
    path: "{{ prometheus_root_dir }}/tmp"
    state: absent
  when: prometheus_force_install|bool

- name: create prometheus temporary deploy dir
  file:
    path: "{{ prometheus_root_dir }}/tmp"
    state: directory

- name: download prometheus binary to temporary folder
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: "{{ prometheus_root_dir }}/tmp/{{ prometheus_archive_name }}"
    checksum: "sha256:{{ prometheus_checksum }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  
- name: unpack prometheus binaries
  unarchive:
    src: "{{ prometheus_root_dir }}/tmp/{{ prometheus_archive_name }}"
    dest: "{{ prometheus_root_dir }}/tmp"
    remote_src: yes
    creates: "{{ prometheus_root_dir }}/tmp/{{ prometheus_extracted_dir }}/prometheus"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755

- name: initialize the deploy root and gather facts
  deploy_helper:
    path: "{{ prometheus_root_dir }}"
    release: "{{ prometheus_version }}"
    state: present

- name: create release directory
  file:
    dest: "{{ deploy_helper.new_release_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0750

- name: propagate prometheus, promtool binaries and console templates
  command: mv -f {{ prometheus_root_dir }}/tmp/{{ prometheus_extracted_dir }}/{{ item }} {{ deploy_helper.new_release_path }}
  with_items:
    - prometheus
    - promtool
    - console_libraries
    - consoles
  tags: skip_ansible_lint
  notify:
    - restart prometheus
  when: not prometheus_bin.stat.exists|bool or prometheus_force_install|bool

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus

- name: finalize the deploy, removing the unfinished file and switching the symlink
  deploy_helper:
    path: "{{ prometheus_root_dir }}"
    release: "{{ deploy_helper.new_release }}"
    state: finalize
  notify:
    - restart prometheus
